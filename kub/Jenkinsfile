pipeline {
    agent any
    environment {
        PROJECT_ID = 'outstanding-pen-389306'
        CLUSTER_NAME = 'cluster'
        LOCATION = 'asia-south1-a'
        CREDENTIALS_ID = 'gcp'
        DOCKERHUB_CREDENTIALS = credentials('docker')
    }
    stages {
        stage('clean workspace'){
            steps{
                cleanWs()
            }
        }
        stage('Git clone') {
            steps{
                git branch: 'jenkins', credentialsId: 'git', url: 'https://github.com/dhruvrkashyap/docker-frontend-backend-db.git'
                sh 'ls -a'
                // sh 'git clone https://github.com/dhruvrkashyap/docker-frontend-backend-db.git'
            }
        }
        stage('Docker image build') {
            steps{
                sh '''cd backend && \
                docker build -t dhruvrkashyap/backend:${BUILD_NUMBER} .
                '''
                sh '''cd frontend && \
                docker build -t dhruvrkashyap/frontend:${BUILD_NUMBER} .
                '''
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                sh 'docker push dhruvrkashyap/frontend:${BUILD_NUMBER}'
                sh 'docker push dhruvrkashyap/backend:${BUILD_NUMBER}'
                sh 'docker rmi dhruvrkashyap/frontend:${BUILD_NUMBER}'
                sh 'docker rmi dhruvrkashyap/backend:${BUILD_NUMBER}'
            }
        }
        stage('Deploy to GKE') {
            steps{
                withKubeConfig([credentialsId: env.CREDENTIALS_ID,
                    serverUrl: 'https://172.16.0.2',
                    clusterName: env.CLUSTER_NAME,
                    namespace: env.NAMESPACE
                    ]){
                // sh "sed -i 's/hello:latest/hello:${env.BUILD_ID}/g' deployment.yaml"
                // step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, 
                // clusterName: env.CLUSTER_NAME, location: env.LOCATION, 
                // manifestPattern: 'docker-frontend-backend-db/kub/backend-deployment.yaml', credentialsId: env.CREDENTIALS_ID, 
                // verifyDeployments: true])
                
                // step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, 
                // clusterName: env.CLUSTER_NAME, location: env.LOCATION, 
                // manifestPattern: 'docker-frontend-backend-db/kub/frontend-deployment.yaml', credentialsId: env.CREDENTIALS_ID, 
                // verifyDeployments: true])
                // curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.20.5/bin/linux/amd64/kubectl" && \
                // chmod +x ./kubectl && \
                
                sh """cd kub && \
                sed -i 's/:latest/:${BUILD_NUMBER}/g' backend-deployment.yaml && \
                sed -i 's/:latest/:${BUILD_NUMBER}/g' frontend-deployment.yaml
                """
                sh '''cd kub && \
                ls -al && \
                kubectl apply -f backend-deployment.yaml -n dhruv && \
                kubectl apply -f frontend-deployment.yaml -n dhruv'''
                }
            }
        }
    }
}
